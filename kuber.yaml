apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go
  template:
    metadata:
      labels:
        app: go
    spec:
      containers:
        - name: go
          image: <your-go-image-name>
          ports:
            - containerPort: ${APP_PORT}
          env:
            - name: APP_INTERNAL_PORT
              value: ${APP_INTERNAL_PORT}
            - name: DB_NAME
              value: ${DB_NAME}
            - name: DB_USER
              value: ${DB_USER}
            - name: DB_PASSWORD
              value: ${DB_PASSWORD}
            - name: DB_PORT
              value: ${DB_PORT}
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: go-service
spec:
  selector:
    app: go
  ports:
    - name: http
      port: ${APP_PORT}
      targetPort: ${APP_PORT}
  type: ClusterIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16.0
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: ${DB_NAME}
            - name: POSTGRES_USER
              value: ${DB_USER}
            - name: POSTGRES_PASSWORD
              value: ${DB_PASSWORD}
            - name: PGDATA
              value: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data-pvc

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi